# -*- coding: utf-8 -*-
"""
Задание 15.1a

Скопировать функцию get_ip_from_cfg из задания 15.1 и переделать ее таким образом,
чтобы она возвращала словарь:
* ключ: имя интерфейса
* значение: кортеж с двумя строками:
  * IP-адрес
  * маска

В словарь добавлять только те интерфейсы, на которых настроены IP-адреса.

Например (взяты произвольные адреса):
{'FastEthernet0/1': ('10.0.1.1', '255.255.255.0'),
 'FastEthernet0/2': ('10.0.2.1', '255.255.255.0')}

Для получения такого результата, используйте регулярные выражения.

Проверить работу функции на примере файла config_r1.txt.

Обратите внимание, что в данном случае, можно не проверять корректность IP-адреса,
диапазоны адресов и так далее, так как обрабатывается вывод команды,
а не ввод пользователя.

"""
import re
def get_ip_from_cfg(config):
	indexes = []
	f = open(config).read()
	all1 = [i for i in range(len(f)) if f.startswith("address 10", i)]
	
	ip1 = f[all1[0]+8:all1[0]+16]
	mask1 = f[all1[0]+17:all1[0]+32]
	
	ip2 = f[all1[1]+8:all1[1]+17]
	mask2 = f[all1[1]+18:all1[1]+31]
	
	ip3 = f[all1[2]+8:all1[2]+17]
	mask3 = f[all1[2]+18:all1[2]+31]
	
	kort1 = tuple((ip1,mask1))
	kort2 = tuple((ip2,mask2))
	kort3 = tuple((ip3,mask3))
	spis = [kort1,kort2,kort3]
	
	key1 = f[all1[0]-14:all1[0]-4]
	key2 = f[all1[1]-34:all1[1]-21]
	key3 = f[all1[2]-16:all1[2]-5]
	
	slov = {key1:kort1, key2:kort2, key3:kort3}
	print(slov)
get_ip_from_cfg("config_r1.txt")